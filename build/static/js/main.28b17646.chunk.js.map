{"version":3,"sources":["services/contacts.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Feedback.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newContactObject","post","id","delete","updatedContactObject","console","log","put","Filter","newSearch","typeNameForFiltering","value","onChange","placeholder","PersonForm","addNewContact","newName","typeContactName","newNumber","typeContactNumber","onSubmit","type","Persons","persons","deleteContact","filteredPersons","length","filter","person","name","toLowerCase","includes","map","index","key","number","onClick","Feedback","newFeedback","inlineStyles","display","padding","fontWeight","border","borderColor","success","backgroundColor","style","message","App","useEffect","contactService","contacts","setPersons","useState","setNewName","setNewNumber","setNewSearch","setNewFeedback","clearInputValues","event","target","preventDefault","newContact","every","addedContact","concat","toUpperCase","setTimeout","window","confirm","contactId","find","updatedContact","catch","error","alert","contact","ReactDOM","render","document","getElementById"],"mappings":"sMAGMA,EAAU,eAwBD,EAtBQ,WAErB,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAoB5B,EAjBO,SAAAC,GAEpB,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAe5B,EAZO,SAAAG,GAEpB,OADgBP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,MAUnB,EAPO,SAACM,EAAsBF,GAI3C,OAHAG,QAAQC,IAAI,uBAAwBF,GACpCC,QAAQC,IAAI,KAAMJ,GACFP,IAAMY,IAAN,UAAab,EAAb,YAAwBQ,GAAME,GAC/BP,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCT5BS,EAbA,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,qBAC3B,OACE,wDAEI,2BACEC,MAAOF,EACPG,SAAUF,EACVG,YAAY,oCCmBPC,EA1BI,SAAC,GAA6E,IAA5EC,EAA2E,EAA3EA,cAAeC,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,gBAAiBC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,kBACvE,OACE,0BAAMC,SAAUL,GACd,qCAEE,2BACEJ,MAAOK,EACPJ,SAAUK,EACVJ,YAAY,wBAGhB,uCAEE,2BACEF,MAAOO,EACPN,SAAUO,EACVN,YAAY,6BAGhB,6BACE,4BAAQQ,KAAK,UAAb,UCHOC,EAjBC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,QAASd,EAA+B,EAA/BA,UAAWe,EAAoB,EAApBA,cAC/BC,EAAkBhB,EAAUiB,OAAS,EACvCH,EAAQI,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAAStB,EAAUqB,kBACtEP,EAEJ,OACE,4BACGE,EAAgBO,KAAI,SAACJ,EAAQK,GAAT,OACnB,wBAAIC,IAAKN,EAAOC,KAAOI,GACrB,8BAAOL,EAAOC,KAAd,KAAsBD,EAAOO,QAC7B,4BAAQC,QAAS,kBAAMZ,EAAcI,KAArC,gBCSKS,EAnBE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACZC,EAAe,CACnBC,QAAS,eACTC,QAAS,OACTC,WAAY,IACZC,OAAQ,YACRC,YAAaN,EAAYO,QAAU,QAAU,MAC7CC,gBAAiBR,EAAYO,QAAU,aAAe,UAGxD,OAAIP,EAEA,yBAAKS,MAAOR,GACTD,EAAYU,SAGL,MCgIDC,EA3IH,WAQVC,qBAPgB,WACdC,IAEGtD,MAAK,SAAAuD,GACJC,EAAWD,QAGE,IARH,MAUgBE,mBAAS,IAVzB,mBAUR/B,EAVQ,KAUC8B,EAVD,OAWgBC,mBAAS,IAXzB,mBAWRtC,EAXQ,KAWCuC,EAXD,OAYoBD,mBAAS,IAZ7B,mBAYRpC,EAZQ,KAYGsC,EAZH,OAaoBF,mBAAS,IAb7B,mBAaR7C,EAbQ,KAaGgD,EAbH,OAcwBH,mBAAS,IAdjC,mBAcRhB,EAdQ,KAcKoB,EAdL,KA4BVC,EAAmB,WACvBJ,EAAW,IACXC,EAAa,KAmFf,OACE,6BACE,yCACA,kBAAC,EAAD,CACE/C,UAAWA,EACXC,qBA9FuB,SAACkD,GAC5BH,EAAaG,EAAMC,OAAOlD,UA+FxB,kBAAC,EAAD,CAAU2B,YAAaA,IACvB,+CACA,kBAAC,EAAD,CACEtB,QAASA,EACTC,gBA5GkB,SAAC2C,GACvBL,EAAWK,EAAMC,OAAOlD,QA4GpBO,UAAWA,EACXC,kBA1GoB,SAACyC,GACzBJ,EAAaI,EAAMC,OAAOlD,QA0GtBI,cA9FgB,SAAC6C,GAGrB,GAFAA,EAAME,iBAEF9C,GAAWE,EAAW,CACxB,IAAM6C,EAAa,CACjBlC,KAAMb,EACNmB,OAAQjB,GAQV,GANmBW,EAMLb,EALLO,EAAQyC,OAAM,SAAApC,GACnB,OAAOA,EAAOC,OAASA,KAKzBsB,EACiBY,GACdlE,MAAK,SAAAoE,GACJ5D,QAAQC,IAAI,iBAAkB2D,GAC9BZ,EAAW9B,EAAQ2C,OAAOD,IAC1BP,EAAe,CACbV,QAAQ,SAAD,OAAWhC,EAAQmD,cAAnB,KACPtB,SAAS,IAEXc,IACAS,YAAW,WACTV,GAAe,KACd,aAKP,GAFkBW,OAAOC,QAAP,UAAkBtD,EAAlB,2EAEH,CACb,IAAMuD,EAAYhD,EAAQiD,MAAK,SAAA5C,GAAM,OAAIA,EAAOC,OAASb,KAASd,GAClEG,QAAQC,IAAI,aAAciE,GAE1BpB,EACiBY,EAAYQ,GAC1B1E,MAAK,SAAA4E,GACJpE,QAAQC,IAAI,kBAAmBmE,GAC/BpB,EAAW9B,EAAQS,KAAI,SAAAJ,GAAM,OAAIA,EAAO1B,KAAOuE,EAAevE,GAAK0B,EAAS6C,MAC5Ef,EAAe,CACbV,QAAQ,WAAD,OAAayB,EAAe5C,KAAKsC,cAAjC,cACPtB,SAAS,IAEXc,IACAS,YAAW,WACTV,GAAe,KACd,QAEJgB,OAAM,SAAAC,GAELjB,EAAe,CACbV,QAAQ,kBAAD,OAAoBe,EAAWlC,KAAKsC,cAApC,8CACPtB,SAAS,IAEXuB,YAAW,WACTV,GAAe,KACd,cAKXkB,MAAM,6BAvDY,IAAC/C,KAwFnB,uCACA,kBAAC,EAAD,CACEN,QAASA,EACTd,UAAWA,EACXe,cAjCgB,SAACqD,GACHR,OAAOC,QAAP,iBAAyBO,EAAQhD,KAAjC,OAGhBsB,EACiB0B,EAAQ3E,IACtBL,MAAK,SAAAC,GACJO,QAAQC,IAAI,mBAAoBR,GAChCuD,EAAW9B,EAAQI,QAAO,SAAAC,GAAM,OAAIA,EAAO1B,KAAO2E,EAAQ3E,eC7GpE4E,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.28b17646.chunk.js","sourcesContent":["import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/api/persons'\n//const baseUrl = 'https://sheltered-crag-90637.herokuapp.com/api/persons'\nconst baseUrl = '/api/persons'\n\nconst getAllContacts = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst createContact = newContactObject => {\n  const request = axios.post(baseUrl, newContactObject)\n  return request.then(response => response.data)\n}\n\nconst deleteContact = id => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response)\n}\n\nconst updateContact = (updatedContactObject, id) => {\n  console.log('updatedContactObject', updatedContactObject);\n  console.log('id', id);\n  const request = axios.put(`${baseUrl}/${id}`, updatedContactObject)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAllContacts,\n  createContact,\n  deleteContact,\n  updateContact\n}","import React from 'react'\n\nconst Filter = ({ newSearch, typeNameForFiltering}) => {\n  return (\n    <div>\n        filter contacts by name: \n        <input\n          value={newSearch}\n          onChange={typeNameForFiltering} \n          placeholder=\"add contact name to filter...\" \n        />\n      </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({addNewContact, newName, typeContactName, newNumber, typeContactNumber}) => {\n  return (\n    <form onSubmit={addNewContact}>\n      <div>\n        name: \n        <input\n          value={newName}\n          onChange={typeContactName} \n          placeholder=\"add new contact...\"\n        />\n      </div>\n      <div>\n        number: \n        <input\n          value={newNumber}\n          onChange={typeContactNumber} \n          placeholder=\"add contact's number...\" \n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ persons, newSearch, deleteContact }) => {\n  const filteredPersons = newSearch.length > 0\n    ? persons.filter(person => person.name.toLowerCase().includes(newSearch.toLowerCase()))\n    : persons\n\n  return (\n    <ul>\n      {filteredPersons.map((person, index) =>\n        <li key={person.name + index}>\n          <span>{person.name}: {person.number}</span>\n          <button onClick={() => deleteContact(person)}>delete</button>\n        </li>\n      )}\n    </ul>\n  )  \n}\n\nexport default Persons\n","import React from 'react'\n\nconst Feedback = ({ newFeedback }) => {\n  const inlineStyles = {\n    display: 'inline-block',\n    padding: '1rem',\n    fontWeight: 700,\n    border: '1px solid',\n    borderColor: newFeedback.success ? 'green' : 'red',\n    backgroundColor: newFeedback.success ? 'lightgreen' : 'orange',\n  }\n\n  if (newFeedback) {\n    return (\n      <div style={inlineStyles}>\n        {newFeedback.message}\n      </div>\n    )\n  } else return null\n}\n\nexport default Feedback","import React, { useState, useEffect } from 'react'\nimport contactService from './services/contacts'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Feedback from './components/Feedback'\n\nconst App = () => {\n  const getJSON = () => {\n    contactService\n      .getAllContacts()\n      .then(contacts => {\n        setPersons(contacts)\n      })\n  }\n  useEffect(getJSON, [])\n\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newSearch, setNewSearch ] = useState('')\n  const [ newFeedback, setNewFeedback ] = useState('')\n\n  const typeContactName = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const typeContactNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const typeNameForFiltering = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const clearInputValues = () => {\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const addNewContact = (event) => {\n    event.preventDefault()\n\n    if (newName && newNumber) {\n      const newContact = {\n        name: newName,\n        number: newNumber\n      }\n      const isNewName = (name) => {\n        return persons.every(person => {\n          return person.name !== name\n        })\n      }\n      \n      if (isNewName(newName)) {\n        contactService\n          .createContact(newContact)\n          .then(addedContact => {\n            console.log('added contact:', addedContact);\n            setPersons(persons.concat(addedContact))\n            setNewFeedback({\n              message: `Added ${newName.toUpperCase()}!`,\n              success: true\n            })\n            clearInputValues()\n            setTimeout(() => {\n              setNewFeedback(false)\n            }, 3000);\n          })\n      } else {\n        const confirmed = window.confirm(`${newName} is already added to phonebook. Replace the old number with a new one?`)\n        \n        if (confirmed) {\n          const contactId = persons.find(person => person.name === newName).id\n          console.log('contactId:', contactId);\n\n          contactService\n            .updateContact(newContact, contactId)\n            .then(updatedContact => {\n              console.log('updatedContact:', updatedContact);\n              setPersons(persons.map(person => person.id !== updatedContact.id ? person : updatedContact))\n              setNewFeedback({\n                message: `Updated ${updatedContact.name.toUpperCase()}'s number!`,\n                success: true\n              })\n              clearInputValues()\n              setTimeout(() => {\n                setNewFeedback(false)\n              }, 3000);\n            })\n            .catch(error => {\n              //console.log(error);\n              setNewFeedback({\n                message: `Information of ${newContact.name.toUpperCase()} has already been removed from the server!`,\n                success: false\n              })\n              setTimeout(() => {\n                setNewFeedback(false)\n              }, 3000);\n            })\n        }\n      }\n    } else {\n      alert(`Add both name and number!`)\n    }\n  }\n\n  const deleteContact = (contact) => {\n    const confirmed = window.confirm(`Delete ${contact.name}?`)\n\n    if (confirmed) {\n      contactService\n        .deleteContact(contact.id)\n        .then(response => {\n          console.log('deleted contact:', response);\n          setPersons(persons.filter(person => person.id !== contact.id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter\n        newSearch={newSearch}\n        typeNameForFiltering={typeNameForFiltering}\n      />\n      <Feedback newFeedback={newFeedback}/>\n      <h2>Add new contact</h2>\n      <PersonForm\n        newName={newName}\n        typeContactName={typeContactName}\n        newNumber={newNumber}\n        typeContactNumber={typeContactNumber}\n        addNewContact={addNewContact}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        newSearch={newSearch}\n        deleteContact={deleteContact}\n      />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n// Part 3b - phonebook backend\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}